apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-manager
  namespace: flux-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: flux-system
  name: secret-manager-role
rules:
- apiGroups: [""]
  resources: ["secrets","serviceaccounts"]
  verbs: ["create", "update", "patch", "get", "list", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-manager-rolebinding
  namespace: flux-system
subjects:
- kind: ServiceAccount
  name: secret-manager
  namespace: flux-system
roleRef:
  kind: Role
  name: secret-manager-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dockerhub-registry-credential-cron
  namespace: flux-system
spec:
  schedule: "0 */7 * * *"
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2  
  jobTemplate:
    spec:
      backoffLimit: 4
      template:
        spec:
          serviceAccountName: secret-manager
          terminationGracePeriodSeconds: 0
          restartPolicy: Never
          containers:
          - name: kubectl
            imagePullPolicy: IfNotPresent
            image: bitnami/kubectl:latest
            command:
            - "/bin/sh"
            - "-c"
            - |
              apt update && apt install -y docker.io

              DOCKER_USER=$(kubectl get secret dockerhub-creds -n flux-system -o jsonpath='{.data.DOCKER_USER}' | base64 --decode)
              DOCKER_PASSWORD=$(kubectl get secret dockerhub-creds -n flux-system -o jsonpath='{.data.DOCKER_PASSWORD}' | base64 --decode)

              kubectl delete secret dockerhub-secret -n flux-system || true

              kubectl create secret docker-registry dockerhub-secret \
                --namespace flux-system \
                --docker-server=https://index.docker.io/v1/ \
                --docker-username=$DOCKER_USER \
                --docker-password=$DOCKER_PASSWORD \
                --docker-email=no@email.local

              kubectl -n flux-system patch serviceaccount secret-manager -p \
                '{"imagePullSecrets":[{"name":"dockerhub-secret"}]}'